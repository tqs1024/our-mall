<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nb.mapper.GoodsMapper">

    <resultMap id="BaseResultMap" type="com.nb.entity.Goods">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="picture" jdbcType="VARCHAR" property="picture"/>
        <result column="stock" jdbcType="BIGINT" property="stock"/>
        <result column="price" jdbcType="DOUBLE" property="price"/>
        <result column="describe" jdbcType="LONGVARCHAR" property="describe"/>
        <result column="type" jdbcType="BIGINT" property="type"/>
    </resultMap>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from sm_goods
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.nb.entity.Goods">
        insert into sm_goods (id, name, picture,
                              stock, price, describe)
        values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR},
                #{stock,jdbcType=BIGINT}, #{price,jdbcType=DOUBLE}, #{describe,jdbcType=LONGVARCHAR})
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.nb.entity.Goods">
        update sm_goods
        set name     = #{name,jdbcType=VARCHAR},
            picture  = #{picture,jdbcType=VARCHAR},
            stock    = #{stock,jdbcType=BIGINT},
            price    = #{price,jdbcType=DOUBLE},
            describe = #{describe,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select id, name, picture, stock, price, describe
        from sm_goods
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectAll" resultType="com.nb.vo.GoodsVo">
        select g.`id`, g.`name`, g.`picture`, g.`stock`, g.`price`, g.`describe`, t.`typename`
        from sm_goods g
                 join sm_goodstype t on
            g.`type` = t.`typeid`
    </select>

    <select id="selectOneDetailsById" resultType="com.nb.vo.GoodsVo" parameterType="Long">
        select g.`id`, g.`name`, g.`picture`, g.`stock`, g.`price`, g.`describe`, t.`typename`
        from sm_goods g
                 join sm_goodstype t on
            g.`type` = t.`typeid`
        where g.`id` = #{id}
    </select>

    <select id="selectGoodsByType" resultType="com.nb.vo.GoodsVo" parameterType="Long">
        select g.`id`, g.`name`, g.`picture`, g.`stock`, g.`price`, g.`describe`, t.`typename`
        from sm_goods g
                 join sm_goodstype t on
            g.`type` = t.`typeid`
        where g.`type` = #{typeid}
    </select>

    <select id="selectTypeNameById" resultType="java.lang.String" parameterType="Long">
        select `typename`
        from sm_goodstype
        where `typeid` = #{typeid}
    </select>

</mapper>